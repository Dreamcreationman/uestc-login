# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import threading
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QSystemTrayIcon, QAction, QMenu, QWidget, QMessageBox
import json
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QCoreApplication
from Login import Login
import images

class Ui_mainWindow(object):
    def setupUi(self, mainWindow, app):
        if not os.path.exists("config.json"):
            open("config.json", "w").write('{"username": "201313141314","password": "test","position": "0"}')
        tp = QSystemTrayIcon(mainWindow)
        icon = QIcon(':/logo.ico')
        tp.setIcon(icon)
        # 设置系统托盘图标的菜单
        a1 = QAction('&修改信息(Modify)', triggered=mainWindow.show)

        def quitApp():
            QCoreApplication.instance().quit()
            tp.setVisible(False)

        a2 = QAction('&退出(Exit)', triggered=quitApp)  # 直接退出可以用qApp.quit

        tpMenu = QMenu()
        tpMenu.addAction(a1)
        tpMenu.addAction(a2)
        tp.setContextMenu(tpMenu)

        def act(reason):
            # 鼠标点击icon传递的信号会带有一个整形的值，1是表示单击右键，2是双击，3是单击左键，4是用鼠标中键点击
            if reason == 2 or reason == 3:
                mainWindow.show()
            print("系统托盘的图标被点击了")

        tp.activated.connect(act)
        self.tp = tp
        self.tp.show()
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(535, 380)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.formLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.formLayoutWidget.setGeometry(QtCore.QRect(80, 40, 363, 281))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(20, 30, 20, 30)
        self.formLayout.setHorizontalSpacing(15)
        self.formLayout.setVerticalSpacing(20)
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.username = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.username.setFont(font)
        self.username.setObjectName("lineEdit_2")
        self.username.setMaxLength(12)
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.username)
        self.label_2 = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(20)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.passwd = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        self.passwd.setFont(font)
        self.passwd.setObjectName("lineEdit")
        self.passwd.setMaxLength(50)
        self.passwd.setEchoMode(QtWidgets.QLineEdit.Password)
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.passwd)
        self.ok = QtWidgets.QPushButton(self.formLayoutWidget)
        self.exit = QtWidgets.QPushButton(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        self.ok.setFont(font)
        self.ok.setObjectName("pushButton")
        self.exit.setFont(font)
        self.exit.setObjectName("pushButton")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.ok)
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.exit)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(10, 5, 10, 5)
        self.horizontalLayout.setSpacing(5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.mainbuiling = QtWidgets.QRadioButton(self.formLayoutWidget)
        self.mainbuiling.setObjectName("radioButton_2")
        self.horizontalLayout.addWidget(self.mainbuiling)
        self.dorm = QtWidgets.QRadioButton(self.formLayoutWidget)
        self.dorm.setObjectName("radioButton")
        self.horizontalLayout.addWidget(self.dorm)
        self.formLayout.setLayout(2, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout)
        mainWindow.setCentralWidget(self.centralwidget)
        mainWindow.setWindowIcon(icon)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(mainWindow, app)
        self.set_info()
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow, app):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "电子科技大学自动登录"))
        self.label.setText(_translate("mainWindow", "学号"))
        self.username.setToolTip(_translate("mainWindow", "你的学号"))
        self.label_2.setText(_translate("mainWindow", "密码"))
        self.passwd.setToolTip(_translate("mainWindow", "服务大厅的密码"))
        self.ok.setText(_translate("mainWindow", "确定"))
        self.exit.setText(_translate("mainWindow", "退出"))
        self.mainbuiling.setText(_translate("mainWindow", "主楼"))
        self.dorm.setText(_translate("mainWindow", "寝室（硕丰）"))
        self.mainbuiling.setChecked(True)
        self.ok.clicked.connect(lambda: self.onclick(mainWindow))
        self.exit.clicked.connect(lambda: self.onexit(app, mainWindow))

    def onexit(self):
        mainWindow.destroy()
        app.quit()
        app.exit(0)

    def onclick(self, mainWindow):
        print(self.username.text(), self.passwd.text())
        pos = 0 if self.mainbuiling.isChecked() else 1
        with open("config.json", "w") as fw:
            fw.write('{"username": "' + str(self.username.text()) + '","password": "' + str(self.passwd.text()) + '","position": "' + str(pos) +'"}')
        if int(pos) == 0:
            self.login = Login(str(self.username.text()), str(self.passwd.text()))
        else:
            self.login = Login(str(self.username.text()), str(self.passwd.text()), ac_id="3", domain="@cmcc", base_auth_url="http://10.253.0.237/")
        mainWindow.close()
        self.thread.join()
        del self.thread
        self.thread = threading.Thread(target=self.login.run, args=(self.tp, )).start()

    def set_info(self):
        content = json.loads(open("config.json").read())
        username = content["username"]
        passwd = content["password"]
        position = content["position"]
        self.username.setText(str(username))
        self.passwd.setText(str(passwd))
        if int(position) == 0:
            self.mainbuiling.setChecked(True)
        else:
            self.dorm.setChecked(True)

        if int(position) == 0:
            self.login = Login(username, passwd)
        else:
            self.login = Login(username, passwd, ac_id="3", domain="@cmcc", base_auth_url="http://10.253.0.237/")

        import threading
        self.thread = threading.Thread(target=self.login.run, args=(self.tp, ))
        self.thread.start()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_mainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())
